{"ast":null,"code":"var _jsxFileName = \"/home/mekala/react/appln1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DropdownMenu from \"./dropdownMenu.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const workManagement = ['Agility', 'Jira', 'Servicenow'];\n  const scm = ['Bitbucket', 'Git', 'Teamforge'];\n  const [selectedValuesMap, setSelectedValuesMap] = useState(new Map());\n\n  const handleDropdownSelect = (dropdownName, selectedValue) => {\n    const updatedMap = new Map(selectedValuesMap);\n    updatedMap.set(dropdownName, selectedValue);\n    setSelectedValuesMap(updatedMap);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Automated Template / workflow Generation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Build you template using ......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: workManagement,\n      labelName: \"workManagement\",\n      placeholder: \"Select a workMangement\",\n      onSelect: value => handleDropdownSelect('workManagement', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: scm,\n      labelName: \"scm\",\n      placeholder: \"Select a SCM tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}; // ReactDOM.createRoot(document.querySelector('root'));\n\n\n_s(App, \"a101/DpX+7TC/kB/ZHGein/mB4Q=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mekala/react/appln1/src/index.js"],"names":["React","ReactDOM","DropdownMenu","App","workManagement","scm","selectedValuesMap","setSelectedValuesMap","useState","Map","handleDropdownSelect","dropdownName","selectedValue","updatedMap","set","value","render","document","querySelector"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACd,QAAMC,cAAc,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,YAApB,CAAvB;AACA,QAAMC,GAAG,GAAG,CAAC,WAAD,EAAc,KAAd,EAAqB,WAArB,CAAZ;AAEA,QAAM,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CC,QAAQ,CAAC,IAAIC,GAAJ,EAAD,CAA1D;;AAEA,QAAMC,oBAAoB,GAAG,CAACC,YAAD,EAAeC,aAAf,KAAiC;AAC1D,UAAMC,UAAU,GAAG,IAAIJ,GAAJ,CAAQH,iBAAR,CAAnB;AACAO,IAAAA,UAAU,CAACC,GAAX,CAAeH,YAAf,EAA6BC,aAA7B;AACAL,IAAAA,oBAAoB,CAACM,UAAD,CAApB;AACH,GAJD;;AAMA,sBACA;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGA,QAAC,YAAD;AAAc,MAAA,eAAe,EAAET,cAA/B;AACc,MAAA,SAAS,EAAC,gBADxB;AAEc,MAAA,WAAW,EAAC,wBAF1B;AAGc,MAAA,QAAQ,EAAGW,KAAD,IAAWL,oBAAoB,CAAC,gBAAD,EAAmBK,KAAnB;AAHvD;AAAA;AAAA;AAAA;AAAA,YAHA,eAOA,QAAC,YAAD;AAAc,MAAA,eAAe,EAAEV,GAA/B;AAAoC,MAAA,SAAS,EAAC,KAA9C;AAAoD,MAAA,WAAW,EAAG;AAAlE;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWH,CAvBD,C,CAyBA;;;GAzBMF,G;;KAAAA,G;AA0BNF,QAAQ,CAACe,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DropdownMenu from \"./dropdownMenu.js\";\n\nconst App = () => {\n    const workManagement = ['Agility', 'Jira', 'Servicenow'];\n    const scm = ['Bitbucket', 'Git', 'Teamforge'];\n\n    const [selectedValuesMap, setSelectedValuesMap] = useState(new Map());\n\n    const handleDropdownSelect = (dropdownName, selectedValue) => {\n        const updatedMap = new Map(selectedValuesMap);\n        updatedMap.set(dropdownName, selectedValue);\n        setSelectedValuesMap(updatedMap);\n    };\n\n    return (\n    <div>\n        <h3>Automated Template / workflow Generation</h3>\n        <h1>Build you template using ......</h1>\n    <DropdownMenu templateOptions={workManagement} \n                  labelName=\"workManagement\" \n                  placeholder=\"Select a workMangement\"\n                  onSelect={(value) => handleDropdownSelect('workManagement', value)}/>\n    <DropdownMenu templateOptions={scm} labelName=\"scm\" placeholder = \"Select a SCM tool\"/>  \n    </div>\n    );\n}\n\n// ReactDOM.createRoot(document.querySelector('root'));\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}