{"ast":null,"code":"var _jsxFileName = \"/home/mekala/react/appln1/src/dropdownMenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DropdownMenu({\n  templateOptions,\n  labelName,\n  placeholder,\n  onSelect\n}) {\n  _s();\n\n  const [selectedOption, setSelectedOption] = useState('');\n\n  const handleOptionChange = event => {\n    console.log('option selected', labelName, 'evnt value', event.target.value);\n    setSelectedOption(event.target.value);\n    onSelect(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown-options\",\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"label-value\",\n      htmlFor: \"dropdown\",\n      children: [labelName, \"  :  \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      className: \"selected-value\",\n      id: \"dropdown\",\n      value: selectedOption,\n      onChange: handleOptionChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        disabled: true,\n        children: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), templateOptions.map((templateOption, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: templateOption,\n        children: [\" \", templateOption]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DropdownMenu, \"+aYHZE0a/835MlUfESRBJSmwxHw=\");\n\n_c = DropdownMenu;\nexport default DropdownMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"DropdownMenu\");","map":{"version":3,"sources":["/home/mekala/react/appln1/src/dropdownMenu.js"],"names":["React","useState","DropdownMenu","templateOptions","labelName","placeholder","onSelect","selectedOption","setSelectedOption","handleOptionChange","event","console","log","target","value","map","templateOption","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAgC,OAAhC;AACA,OAAO,aAAP;;;AAEA,SAASC,YAAT,CAAsB;AAClBC,EAAAA,eADkB;AAElBC,EAAAA,SAFkB;AAGlBC,EAAAA,WAHkB;AAIlBC,EAAAA;AAJkB,CAAtB,EAIgB;AAAA;;AACZ,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;;AAGA,QAAMQ,kBAAkB,GAAIC,KAAD,IAAW;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BR,SAA/B,EAA0C,YAA1C,EAAwDM,KAAK,CAACG,MAAN,CAAaC,KAArE;AACAN,IAAAA,iBAAiB,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAjB;AACAR,IAAAA,QAAQ,CAACI,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAR;AACH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACA;AAAO,MAAA,SAAS,EAAC,aAAjB;AAA+B,MAAA,OAAO,EAAC,UAAvC;AAAA,iBAAmDV,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAQ,MAAA,SAAS,EAAC,gBAAlB;AACQ,MAAA,EAAE,EAAC,UADX;AAEQ,MAAA,KAAK,EAAEG,cAFf;AAGQ,MAAA,QAAQ,EAAEE,kBAHlB;AAAA,8BAIA;AAAQ,QAAA,KAAK,EAAC,EAAd;AAAiB,QAAA,QAAQ,MAAzB;AAAA,kBACGJ;AADH;AAAA;AAAA;AAAA;AAAA,cAJA,EAQCF,eAAe,CAACY,GAAhB,CAAoB,CAACC,cAAD,EAAiBC,KAAjB,kBACrB;AAAoB,QAAA,KAAK,EAAED,cAA3B;AAAA,wBAA6CA,cAA7C;AAAA,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cADC,CARD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;GAjCQf,Y;;KAAAA,Y;AAmCT,eAAeA,YAAf","sourcesContent":["import React , { useState }from \"react\";\nimport './style.css';\n\nfunction DropdownMenu({ \n    templateOptions,\n    labelName,\n    placeholder,\n    onSelect }) {\n    const [selectedOption, setSelectedOption] = useState('');\n  \n\n    const handleOptionChange = (event) => {\n        console.log('option selected', labelName, 'evnt value', event.target.value);\n        setSelectedOption(event.target.value);\n        onSelect(event.target.value);\n    };\n\n    return (\n        <div className=\"dropdown-options\">  \n        <label className=\"label-value\" htmlFor=\"dropdown\">{labelName}  :  </label>\n        <select className=\"selected-value\"\n                id=\"dropdown\" \n                value={selectedOption} \n                onChange={handleOptionChange}>\n        <option value=\"\" disabled>\n          {placeholder}\n        </option>\n        \n        {templateOptions.map((templateOption, index) => (\n        <option key={index} value={templateOption}> {templateOption}\n        </option>\n        ))}\n        </select>\n      </div>\n\n    )\n}\n\nexport default DropdownMenu;"]},"metadata":{},"sourceType":"module"}