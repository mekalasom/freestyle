{"ast":null,"code":"var _jsxFileName = \"/home/mekala/react/appln1/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DropdownMenu from \"./dropdownMenu.js\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const workManagement = ['Agility', 'Jira', 'Servicenow'];\n  const scm = ['Bitbucket', 'Git', 'Teamforge'];\n  const buildCi = ['Azure devops', 'Docker', 'github Actions', 'Jenkins'];\n  const artifactory = ['Azure devops', 'Jfrog', 'Nexus'];\n  const CD = ['ArgoCD', 'Azure devops', 'DAI Deploy'];\n  const security = ['Blackduck', 'Checkmarkx', 'SonarQube'];\n  const provision = ['Anisble', 'AWS', 'Azure', 'Helm', 'Terraform'];\n  const secretsManagement = ['AWS Secret manager', 'Azure vault', 'Conjour', 'HasicorpVaule'];\n  const [selectedValuesMap, setSelectedValuesMap] = useState(new Map());\n\n  const handleDropdownSelect = (dropdownName, selectedValue) => {\n    const updatedMap = new Map(selectedValuesMap);\n    updatedMap.set(dropdownName, selectedValue);\n    setSelectedValuesMap(updatedMap);\n  };\n\n  const sayHello = () => {\n    console.log('You clicked me!');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-headings\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Automated Template / workflow Generation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Build you template using ......\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: workManagement,\n      labelName: \"workManagement\",\n      placeholder: \"Select a workMangement\",\n      onSelect: value => handleDropdownSelect('workManagement', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: scm,\n      labelName: \"scm\",\n      placeholder: \"Select a SCM tool\",\n      onSelect: value => handleDropdownSelect('scm', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: buildCi,\n      labelName: \"Build CI\",\n      placeholder: \"Select a Build CI tool\",\n      onSelect: value => handleDropdownSelect('buildCI', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: artifactory,\n      labelName: \"Artifactory\",\n      placeholder: \"Select a artifactory\",\n      onSelect: value => handleDropdownSelect('artifactory', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: CD,\n      labelName: \"CD\",\n      placeholder: \"Select a CD\",\n      onSelect: value => handleDropdownSelect('cd', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: security,\n      labelName: \"Security\",\n      placeholder: \"Select a security\",\n      onSelect: value => handleDropdownSelect('security', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: provision,\n      labelName: \"Provision\",\n      placeholder: \"Select a provision\",\n      onSelect: value => handleDropdownSelect('provision', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: secretsManagement,\n      labelName: \"SecretsManagement\",\n      placeholder: \"Select a secretsManagement\",\n      onSelect: value => handleDropdownSelect('secrets', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sayHello,\n        children: \"Apply in Release\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // ReactDOM.createRoot(document.querySelector('root'));\n\n\n_s(App, \"a101/DpX+7TC/kB/ZHGein/mB4Q=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 81,\n  columnNumber: 17\n}, this), document.querySelector(\"#root\"));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mekala/react/appln1/src/index.js"],"names":["React","useState","ReactDOM","DropdownMenu","App","workManagement","scm","buildCi","artifactory","CD","security","provision","secretsManagement","selectedValuesMap","setSelectedValuesMap","Map","handleDropdownSelect","dropdownName","selectedValue","updatedMap","set","sayHello","console","log","value","render","document","querySelector"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport DropdownMenu from \"./dropdownMenu.js\";\nimport './style.css';\n\nconst App = () => {\n    const workManagement = ['Agility', 'Jira', 'Servicenow'];\n    const scm = ['Bitbucket', 'Git', 'Teamforge'];\n    const buildCi = ['Azure devops', 'Docker', 'github Actions', 'Jenkins'];\n    const artifactory = ['Azure devops', 'Jfrog', 'Nexus'];\n    const CD = ['ArgoCD' , 'Azure devops', 'DAI Deploy'];\n    const security = ['Blackduck', 'Checkmarkx', 'SonarQube'];\n    const provision = ['Anisble', 'AWS', 'Azure', 'Helm', 'Terraform'];\n    const secretsManagement = ['AWS Secret manager', 'Azure vault', 'Conjour', 'HasicorpVaule'];\n\n\n    const [selectedValuesMap, setSelectedValuesMap] = useState(new Map());\n\n    const handleDropdownSelect = (dropdownName, selectedValue) => {\n        const updatedMap = new Map(selectedValuesMap);\n        updatedMap.set(dropdownName, selectedValue);\n        setSelectedValuesMap(updatedMap);\n    };\n\n    const sayHello = () => {\n        console.log('You clicked me!');\n    };\n\n    return (\n    <div>\n        <div className=\"title-headings\">\n        <h3>Automated Template / workflow Generation</h3></div>\n        <h4>Build you template using ......</h4>\n    <DropdownMenu templateOptions={workManagement} \n                  labelName=\"workManagement\" \n                  placeholder=\"Select a workMangement\"\n                  onSelect={(value) => handleDropdownSelect('workManagement', value)}/>\n    \n    <DropdownMenu templateOptions={scm} \n                  labelName=\"scm\" \n                  placeholder = \"Select a SCM tool\"\n                  onSelect={(value) => handleDropdownSelect('scm', value)}/>  \n\n    <DropdownMenu templateOptions={buildCi} \n                  labelName=\"Build CI\" \n                  placeholder = \"Select a Build CI tool\"\n                  onSelect={(value) => handleDropdownSelect('buildCI', value)}/>  \n\n    <DropdownMenu templateOptions={artifactory} \n                  labelName=\"Artifactory\" \n                  placeholder = \"Select a artifactory\"\n                  onSelect={(value) => handleDropdownSelect('artifactory', value)}/>  \n    \n    <DropdownMenu templateOptions={CD} \n                  labelName=\"CD\" \n                  placeholder = \"Select a CD\"\n                  onSelect={(value) => handleDropdownSelect('cd', value)}/>\n    \n    <DropdownMenu templateOptions={security} \n                  labelName=\"Security\" \n                  placeholder = \"Select a security\"\n                  onSelect={(value) => handleDropdownSelect('security', value)}/>  \n\n    <DropdownMenu templateOptions={provision} \n                  labelName=\"Provision\" \n                  placeholder = \"Select a provision\"\n                  onSelect={(value) => handleDropdownSelect('provision', value)}/>  \n    \n    <DropdownMenu templateOptions={secretsManagement} \n                  labelName=\"SecretsManagement\" \n                  placeholder = \"Select a secretsManagement\"\n                  onSelect={(value) => handleDropdownSelect('secrets', value)}/>  \n    <div>\n        <button onClick={sayHello}>Apply in Release</button>\n    </div>\n    </div>\n    );\n}\n\n// ReactDOM.createRoot(document.querySelector('root'));\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n"]},"metadata":{},"sourceType":"module"}