{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\fresstyle\\\\freestyle\\\\src\\\\selection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DropdownMenu from \"./dropdownMenu.js\";\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Selection = () => {\n  _s();\n\n  const workManagement = ['Agility', 'Jira', 'Servicenow'];\n  const scm = ['Bitbucket', 'Github', 'Gitlab'];\n  const buildCi = ['Devops', 'Actions', 'Jenkins'];\n  const artifactory = ['Jfrog', 'Nexus'];\n  const CD = ['Argocd', 'Devops', 'DAI Deploy'];\n  const security = ['Blackduck', 'Checkmarkx', 'SonarQube'];\n  const [selectedValuesMap, setSelectedValuesMap] = useState(new Map());\n\n  const handleDropdownSelect = (dropdownName, selectedValue) => {\n    const updatedMap = new Map(selectedValuesMap);\n    updatedMap.set(dropdownName, selectedValue.toLowerCase());\n    setSelectedValuesMap(updatedMap);\n  };\n\n  const handleOnClick = async () => {\n    console.log('Downloading yaml !');\n    const selectedValuesJSON = JSON.stringify(Object.fromEntries(selectedValuesMap));\n    console.log(selectedValuesJSON);\n    const response = await fetch('http://localhost:9093/selection', {\n      method: 'POST',\n      body: selectedValuesJSON,\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': '*/*'\n      }\n    });\n    const result = await response.json();\n    console.log(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-headings\",\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Build you template using the below dropdown list \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: workManagement,\n      labelName: \"WorkManagement\",\n      placeholder: \"Select a workMangement\",\n      onSelect: value => handleDropdownSelect('workManagement', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: scm,\n      labelName: \"SCM\",\n      placeholder: \"Select a SCM tool\",\n      onSelect: value => handleDropdownSelect('scm', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: buildCi,\n      labelName: \"Build CI\",\n      placeholder: \"Select a Build CI tool\",\n      onSelect: value => handleDropdownSelect('buildCI', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: artifactory,\n      labelName: \"Artifactory\",\n      placeholder: \"Select a artifactory\",\n      onSelect: value => handleDropdownSelect('artifactory', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: CD,\n      labelName: \"CD\",\n      placeholder: \"Select a CD\",\n      onSelect: value => handleDropdownSelect('cd', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(DropdownMenu, {\n      templateOptions: security,\n      labelName: \"Security\",\n      placeholder: \"Select a security\",\n      onSelect: value => handleDropdownSelect('security', value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOnClick,\n        children: \" Apply to Release  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Selection, \"a101/DpX+7TC/kB/ZHGein/mB4Q=\");\n\n_c = Selection;\nexport default Selection;\n\nvar _c;\n\n$RefreshReg$(_c, \"Selection\");","map":{"version":3,"sources":["C:/project/fresstyle/freestyle/src/selection.js"],"names":["React","useState","DropdownMenu","Selection","workManagement","scm","buildCi","artifactory","CD","security","selectedValuesMap","setSelectedValuesMap","Map","handleDropdownSelect","dropdownName","selectedValue","updatedMap","set","toLowerCase","handleOnClick","console","log","selectedValuesJSON","JSON","stringify","Object","fromEntries","response","fetch","method","body","headers","result","json","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport DropdownMenu from \"./dropdownMenu.js\";\r\nimport './style.css';\r\n\r\nconst Selection = () => {\r\n    const workManagement = ['Agility', 'Jira', 'Servicenow'];\r\n    const scm = ['Bitbucket', 'Github', 'Gitlab'];\r\n    const buildCi = ['Devops', 'Actions', 'Jenkins'];\r\n    const artifactory = ['Jfrog', 'Nexus'];\r\n    const CD = ['Argocd' , 'Devops', 'DAI Deploy'];\r\n    const security = ['Blackduck', 'Checkmarkx', 'SonarQube'];\r\n   \r\n    const [selectedValuesMap, setSelectedValuesMap] = useState(new Map());\r\n\r\n    const handleDropdownSelect = (dropdownName, selectedValue) => {\r\n        const updatedMap = new Map(selectedValuesMap);\r\n        updatedMap.set(dropdownName, selectedValue.toLowerCase());\r\n        setSelectedValuesMap(updatedMap);\r\n    };\r\n\r\n    const handleOnClick = async () => {\r\n        console.log('Downloading yaml !');\r\n        const selectedValuesJSON = JSON.stringify(Object.fromEntries(selectedValuesMap));\r\n        console.log(selectedValuesJSON);\r\n\t\t\r\n\t\tconst response = await fetch('http://localhost:9093/selection', {\r\n\t\t\t  method: 'POST',\r\n\t\t\t  body: selectedValuesJSON,\r\n\t\t\t  headers: {\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Accept':'*/*'\r\n\t\t\t  }\r\n\t\t\t});\r\n\t\tconst result = await response.json();\r\n\t\tconsole.log(result);\r\n        \r\n    };\r\n\r\n    return (\r\n    <div>\r\n        <div className=\"title-headings\">\r\n        <h4>Build you template using the below dropdown list </h4></div>\r\n    <DropdownMenu templateOptions={workManagement} \r\n                  labelName=\"WorkManagement\" \r\n                  placeholder=\"Select a workMangement\"\r\n                  onSelect={(value) => handleDropdownSelect('workManagement', value)}/>\r\n    \r\n    <DropdownMenu templateOptions={scm} \r\n                  labelName=\"SCM\" \r\n                  placeholder = \"Select a SCM tool\"\r\n                  onSelect={(value) => handleDropdownSelect('scm', value)}/>  \r\n\r\n    <DropdownMenu templateOptions={buildCi} \r\n                  labelName=\"Build CI\" \r\n                  placeholder = \"Select a Build CI tool\"\r\n                  onSelect={(value) => handleDropdownSelect('buildCI', value)}/>  \r\n\r\n    <DropdownMenu templateOptions={artifactory} \r\n                  labelName=\"Artifactory\" \r\n                  placeholder = \"Select a artifactory\"\r\n                  onSelect={(value) => handleDropdownSelect('artifactory', value)}/>  \r\n    \r\n    <DropdownMenu templateOptions={CD} \r\n                  labelName=\"CD\" \r\n                  placeholder = \"Select a CD\"\r\n                  onSelect={(value) => handleDropdownSelect('cd', value)}/>\r\n    \r\n    <DropdownMenu templateOptions={security} \r\n                  labelName=\"Security\" \r\n                  placeholder = \"Select a security\"\r\n                  onSelect={(value) => handleDropdownSelect('security', value)}/>  \r\n    <div>\r\n        <button onClick={handleOnClick}> Apply to Release  </button>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default Selection;\r\n"]},"metadata":{},"sourceType":"module"}